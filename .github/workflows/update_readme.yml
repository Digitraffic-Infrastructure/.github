name: Update README with Latest Package Versions

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the public repository
        uses: actions/checkout@v3
        with:
          repository: 'Digitraffic-Infrastructure/.github'

      - name: Set up authentication for private repository
        run: |
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"

      - name: Fetch latest package versions
        id: fetch-version
        run: |
          # Define package names
          PACKAGE_ETSILIB="digitraffic.link.etsi:etsilibrary"
          PACKAGE_CONNECT="digitraffic.connect:connect"

          # Fetch the latest versions for ETSILIB
          ETSILIB_VERSION=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/orgs/Digitraffic-Infrastructure/packages/container/digitraffic.link.etsi%3Aetsilibrary/versions" | \
            jq -r '.[0].metadata.container.tags[0]' 2>/dev/null || echo "unknown")

          # Fetch the latest versions for CONNECT
          CONNECT_VERSION=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/orgs/Digitraffic-Infrastructure/packages/container/digitraffic.connect%3Aconnect/versions" | \
            jq -r '.[0].metadata.container.tags[0]' 2>/dev/null || echo "unknown")

          # Log the fetched versions
          echo "Fetched ETSILIB_VERSION: $ETSILIB_VERSION"
          echo "Fetched CONNECT_VERSION: $CONNECT_VERSION"

          # Check for errors in fetching versions
          if [ -z "$ETSILIB_VERSION" ] || [ "$ETSILIB_VERSION" == "unknown" ]; then
            echo "Error: Failed to fetch ETSILIB version."
            exit 1
          fi
          if [ -z "$CONNECT_VERSION" ] || [ "$CONNECT_VERSION" == "unknown" ]; then
            echo "Error: Failed to fetch CONNECT version."
            exit 1
          fi

          # Export variables for subsequent steps
          echo "ETSILIB_VERSION=$ETSILIB_VERSION" >> $GITHUB_ENV
          echo "CONNECT_VERSION=$CONNECT_VERSION" >> $GITHUB_ENV

      - name: Debugging API Response
        run: |
          echo "Contents of profile/README.md before update:"
          cat profile/README.md

      - name: Update README with latest versions
        run: |
          # Replace placeholders in README
          sed -i "s/{{LATEST_VERSION_ETSILIB}}/$ETSILIB_VERSION/g" profile/README.md
          sed -i "s/{{LATEST_VERSION_CONNECT}}/$CONNECT_VERSION/g" profile/README.md

          # Git configuration for committing
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage and commit changes
          git add profile/README.md
          git commit -m "Update README with latest versions: ETSILIB=$ETSILIB_VERSION, CONNECT=$CONNECT_VERSION" || echo "No changes to commit."

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
